<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="305px" preserveAspectRatio="none" style="width:1897px;height:305px;background:#FFFFFF;" version="1.1" viewBox="0 0 1897 305" width="1897px" zoomAndPan="magnify"><defs><filter height="300%" id="fk2v9ea92kuii" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[d1882744e782dc593d635b2bdcd81099]
class MpiViSchema--><rect codeLine="16" fill="#FEFECE" filter="url(#fk2v9ea92kuii)" height="124.8281" id="MpiViSchema" style="stroke:#A80036;stroke-width:1.5;" width="575" x="657.5" y="7"/><ellipse cx="899.75" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M899.8594,18.3438 L898.7031,23.4219 L901.0313,23.4219 L899.8594,18.3438 Z M898.375,16.1094 L901.3594,16.1094 L904.7188,28.5 L902.2656,28.5 L901.5,25.4375 L898.2188,25.4375 L897.4688,28.5 L895.0313,28.5 L898.375,16.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="82" x="920.25" y="27.1543">MpiViSchema</text><line style="stroke:#A80036;stroke-width:1.5;" x1="658.5" x2="1231.5" y1="39" y2="39"/><polygon fill="none" points="668.5,45,672.5,49,668.5,53,664.5,49" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="677.5" y="53.2104">std::string name;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="658.5" x2="1231.5" y1="59.8047" y2="59.8047"/><ellipse cx="668.5" cy="70.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="677.5" y="74.0151">virtual void ValueIteration(MpiViUtility::ViParameters &amp;viParameters,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="549" x="677.5" y="86.8198">MpiViUtility::MpiParameters &amp;mpiParameters, MpiViUtility::LogParameters &amp;logParameters) = 0;</text><ellipse cx="668.5" cy="96.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="677.5" y="99.6245">virtual std::string GetName() = 0;</text><ellipse cx="668.5" cy="109.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="490" x="677.5" y="112.4292">void calculateMetrics(std::vector&lt;float&gt; &amp;j, MpiViUtility::ViParameters &amp;viParameters,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="525" x="677.5" y="125.2339">MpiViUtility::MpiParameters &amp;mpiParameters, MpiViUtility::LogParameters &amp;logParameters);</text><!--MD5=[458a694654abb4aaa8975278f3b34a10]
class MpiViSchema01--><rect codeLine="24" fill="#FEFECE" filter="url(#fk2v9ea92kuii)" height="99.2188" id="MpiViSchema01" style="stroke:#A80036;stroke-width:1.5;" width="602" x="7" y="192"/><ellipse cx="254.75" cy="208" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M257.7188,213.6406 Q257.1406,213.9375 256.5,214.0781 Q255.8594,214.2344 255.1563,214.2344 Q252.6563,214.2344 251.3281,212.5938 Q250.0156,210.9375 250.0156,207.8125 Q250.0156,204.6875 251.3281,203.0313 Q252.6563,201.375 255.1563,201.375 Q255.8594,201.375 256.5,201.5313 Q257.1563,201.6875 257.7188,201.9844 L257.7188,204.7031 Q257.0938,204.125 256.5,203.8594 Q255.9063,203.5781 255.2813,203.5781 Q253.9375,203.5781 253.25,204.6563 Q252.5625,205.7188 252.5625,207.8125 Q252.5625,209.9063 253.25,210.9844 Q253.9375,212.0469 255.2813,212.0469 Q255.9063,212.0469 256.5,211.7813 Q257.0938,211.5 257.7188,210.9219 L257.7188,213.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="98" x="275.25" y="212.1543">MpiViSchema01</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="608" y1="224" y2="224"/><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="608" y1="232" y2="232"/><ellipse cx="18" cy="243" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="27" y="246.2104">MpiViSchema01();</text><ellipse cx="18" cy="255.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="27" y="259.0151">void ValueIteration(MpiViUtility::ViParameters &amp;viParameters,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="576" x="27" y="271.8198">MpiViUtility::MpiParameters &amp;mpiParameters, MpiViUtility::LogParameters &amp;logParameters) override;</text><ellipse cx="18" cy="281.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="284.6245">std::string GetName() override;</text><!--MD5=[6f1956c52366917897b967085a588b5b]
class MpiViSchema02--><rect codeLine="30" fill="#FEFECE" filter="url(#fk2v9ea92kuii)" height="99.2188" id="MpiViSchema02" style="stroke:#A80036;stroke-width:1.5;" width="602" x="644" y="192"/><ellipse cx="891.75" cy="208" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M894.7188,213.6406 Q894.1406,213.9375 893.5,214.0781 Q892.8594,214.2344 892.1563,214.2344 Q889.6563,214.2344 888.3281,212.5938 Q887.0156,210.9375 887.0156,207.8125 Q887.0156,204.6875 888.3281,203.0313 Q889.6563,201.375 892.1563,201.375 Q892.8594,201.375 893.5,201.5313 Q894.1563,201.6875 894.7188,201.9844 L894.7188,204.7031 Q894.0938,204.125 893.5,203.8594 Q892.9063,203.5781 892.2813,203.5781 Q890.9375,203.5781 890.25,204.6563 Q889.5625,205.7188 889.5625,207.8125 Q889.5625,209.9063 890.25,210.9844 Q890.9375,212.0469 892.2813,212.0469 Q892.9063,212.0469 893.5,211.7813 Q894.0938,211.5 894.7188,210.9219 L894.7188,213.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="98" x="912.25" y="212.1543">MpiViSchema02</text><line style="stroke:#A80036;stroke-width:1.5;" x1="645" x2="1245" y1="224" y2="224"/><line style="stroke:#A80036;stroke-width:1.5;" x1="645" x2="1245" y1="232" y2="232"/><ellipse cx="655" cy="243" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="664" y="246.2104">MpiViSchema01();</text><ellipse cx="655" cy="255.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="664" y="259.0151">void ValueIteration(MpiViUtility::ViParameters &amp;viParameters,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="576" x="664" y="271.8198">MpiViUtility::MpiParameters &amp;mpiParameters, MpiViUtility::LogParameters &amp;logParameters) override;</text><ellipse cx="655" cy="281.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="664" y="284.6245">std::string GetName() override;</text><!--MD5=[be301f8c204d324642c2ca907de51e51]
class MpiViSchema03--><rect codeLine="36" fill="#FEFECE" filter="url(#fk2v9ea92kuii)" height="99.2188" id="MpiViSchema03" style="stroke:#A80036;stroke-width:1.5;" width="602" x="1281" y="192"/><ellipse cx="1528.75" cy="208" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1531.7188,213.6406 Q1531.1406,213.9375 1530.5,214.0781 Q1529.8594,214.2344 1529.1563,214.2344 Q1526.6563,214.2344 1525.3281,212.5938 Q1524.0156,210.9375 1524.0156,207.8125 Q1524.0156,204.6875 1525.3281,203.0313 Q1526.6563,201.375 1529.1563,201.375 Q1529.8594,201.375 1530.5,201.5313 Q1531.1563,201.6875 1531.7188,201.9844 L1531.7188,204.7031 Q1531.0938,204.125 1530.5,203.8594 Q1529.9063,203.5781 1529.2813,203.5781 Q1527.9375,203.5781 1527.25,204.6563 Q1526.5625,205.7188 1526.5625,207.8125 Q1526.5625,209.9063 1527.25,210.9844 Q1527.9375,212.0469 1529.2813,212.0469 Q1529.9063,212.0469 1530.5,211.7813 Q1531.0938,211.5 1531.7188,210.9219 L1531.7188,213.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="98" x="1549.25" y="212.1543">MpiViSchema03</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1282" x2="1882" y1="224" y2="224"/><line style="stroke:#A80036;stroke-width:1.5;" x1="1282" x2="1882" y1="232" y2="232"/><ellipse cx="1292" cy="243" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="1301" y="246.2104">MpiViSchema01();</text><ellipse cx="1292" cy="255.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="1301" y="259.0151">void ValueIteration(MpiViUtility::ViParameters &amp;viParameters,</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="576" x="1301" y="271.8198">MpiViUtility::MpiParameters &amp;mpiParameters, MpiViUtility::LogParameters &amp;logParameters) override;</text><ellipse cx="1292" cy="281.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="1301" y="284.6245">std::string GetName() override;</text><!--MD5=[2a7d1954a800fa8df0f8459bbde02d5e]
reverse link MpiViSchema to MpiViSchema01--><path codeLine="42" d="M694.53,137.35 C626.25,155.57 553.6,174.95 489.94,191.95 " fill="none" id="MpiViSchema-backto-MpiViSchema01" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="693,130.51,714.13,132.11,696.61,144.03,693,130.51" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[2d802c8ad452eb050c6a62bc6cfc7c4f]
reverse link MpiViSchema to MpiViSchema02--><path codeLine="43" d="M945,152.49 C945,165.92 945,179.45 945,191.74 " fill="none" id="MpiViSchema-backto-MpiViSchema02" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="938,152.35,945,132.35,952,152.35,938,152.35" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[de8d5b520ee6e5d6015797a7ef7b787e]
reverse link MpiViSchema to MpiViSchema03--><path codeLine="44" d="M1195.47,137.35 C1263.75,155.57 1336.4,174.95 1400.06,191.95 " fill="none" id="MpiViSchema-backto-MpiViSchema03" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1193.39,144.03,1175.87,132.11,1197,130.51,1193.39,144.03" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d4f26f2afc7968f3d739a9149fe8dc6d]
@startuml scheme-baseclass

!procedure $DISPLAY_IN_ROWS($notes)
    !while %strlen($notes)>0
        !$pos = %strpos($notes,"\n")
        !if $pos > 0
            !$name = %substr($notes, 0, $pos)
            !$notes = %substr($notes,$pos+2)
        !else
            !$name = $notes
            !$notes = ""
        !endif
        $name
    !endwhile
!endprocedure

abstract class MpiViSchema{
    # std::string name;
  
    + $DISPLAY_IN_ROWS("virtual void ValueIteration(MpiViUtility::ViParameters &viParameters, \nMpiViUtility::MpiParameters &mpiParameters, MpiViUtility::LogParameters &logParameters) = 0;")
    + virtual std::string GetName() = 0;
    + $DISPLAY_IN_ROWS("void calculateMetrics(std::vector<float> &j, MpiViUtility::ViParameters &viParameters, \nMpiViUtility::MpiParameters &mpiParameters, MpiViUtility::LogParameters &logParameters);")
}

class MpiViSchema01{
    + MpiViSchema01();
    + $DISPLAY_IN_ROWS("void ValueIteration(MpiViUtility::ViParameters &viParameters, \nMpiViUtility::MpiParameters &mpiParameters, MpiViUtility::LogParameters &logParameters) override;")
    + std::string GetName() override;
}

class MpiViSchema02{
    + MpiViSchema01();
    + $DISPLAY_IN_ROWS("void ValueIteration(MpiViUtility::ViParameters &viParameters, \nMpiViUtility::MpiParameters &mpiParameters, MpiViUtility::LogParameters &logParameters) override;")
    + std::string GetName() override;
}

class MpiViSchema03{
    + MpiViSchema01();
    + $DISPLAY_IN_ROWS("void ValueIteration(MpiViUtility::ViParameters &viParameters, \nMpiViUtility::MpiParameters &mpiParameters, MpiViUtility::LogParameters &logParameters) override;")
    + std::string GetName() override;
}

MpiViSchema <|- - MpiViSchema01
MpiViSchema <|- - MpiViSchema02
MpiViSchema <|- - MpiViSchema03

@enduml

@startuml scheme-baseclass


abstract class MpiViSchema{
    # std::string name;
  
    +         virtual void ValueIteration(MpiViUtility::ViParameters &viParameters, 
        MpiViUtility::MpiParameters &mpiParameters, MpiViUtility::LogParameters &logParameters) = 0;
    + virtual std::string GetName() = 0;
    +         void calculateMetrics(std::vector<float> &j, MpiViUtility::ViParameters &viParameters, 
        MpiViUtility::MpiParameters &mpiParameters, MpiViUtility::LogParameters &logParameters);
}

class MpiViSchema01{
    + MpiViSchema01();
    +         void ValueIteration(MpiViUtility::ViParameters &viParameters, 
        MpiViUtility::MpiParameters &mpiParameters, MpiViUtility::LogParameters &logParameters) override;
    + std::string GetName() override;
}

class MpiViSchema02{
    + MpiViSchema01();
    +         void ValueIteration(MpiViUtility::ViParameters &viParameters, 
        MpiViUtility::MpiParameters &mpiParameters, MpiViUtility::LogParameters &logParameters) override;
    + std::string GetName() override;
}

class MpiViSchema03{
    + MpiViSchema01();
    +         void ValueIteration(MpiViUtility::ViParameters &viParameters, 
        MpiViUtility::MpiParameters &mpiParameters, MpiViUtility::LogParameters &logParameters) override;
    + std::string GetName() override;
}

MpiViSchema <|- - MpiViSchema01
MpiViSchema <|- - MpiViSchema02
MpiViSchema <|- - MpiViSchema03

@enduml

PlantUML version 1.2022.0(Tue Jan 11 17:16:42 CET 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>